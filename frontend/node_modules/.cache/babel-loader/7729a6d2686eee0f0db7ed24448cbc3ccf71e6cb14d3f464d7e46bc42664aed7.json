{"ast":null,"code":"const BASE_URL = \"http://localhost:1000\";\nexport const GetAllEmployees = async (search = \"\", page = 1, limit = 5) => {\n  try {\n    const url = `${BASE_URL}/api/employees?search=${search}&page=${page}&limit=${limit}`;\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error fetching employees:\", err);\n    throw err;\n  }\n};\n_c = GetAllEmployees;\nexport const GetEmployeeDetailsById = async id => {\n  try {\n    const url = `${BASE_URL}/api/employees/${id}`;\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: headers,\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || `HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error fetching employee details:\", err);\n    throw err;\n  }\n};\n_c2 = GetEmployeeDetailsById;\nexport const DeleteEmployeeById = async id => {\n  const url = `${BASE_URL}/api/employees/${id}`;\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  };\n  try {\n    const result = await fetch(url, options);\n    const data = await result.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n_c3 = DeleteEmployeeById;\nexport const CreateEmployee = async empObj => {\n  const url = `${BASE_URL}/api/employees`;\n  console.log(\"url \", url);\n  const formData = new FormData();\n  for (const key in empObj) {\n    formData.append(key, empObj[key]);\n  }\n  const options = {\n    method: \"POST\",\n    body: formData,\n    credentials: \"include\"\n  };\n  try {\n    const result = await fetch(url, options);\n    const data = await result.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n_c4 = CreateEmployee;\nexport const UpdateEmployeeById = async (empObj, id) => {\n  const url = `${BASE_URL}/api/employees/${id}`;\n  console.log(\"url \", url);\n  const formData = new FormData();\n  for (const key in empObj) {\n    formData.append(key, empObj[key]);\n  }\n  const options = {\n    method: \"PUT\",\n    body: formData,\n    credentials: \"include\"\n  };\n  try {\n    const result = await fetch(url, options);\n    const data = await result.json();\n    console.log(\"<---update--> \", data);\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n_c5 = UpdateEmployeeById;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GetAllEmployees\");\n$RefreshReg$(_c2, \"GetEmployeeDetailsById\");\n$RefreshReg$(_c3, \"DeleteEmployeeById\");\n$RefreshReg$(_c4, \"CreateEmployee\");\n$RefreshReg$(_c5, \"UpdateEmployeeById\");","map":{"version":3,"names":["BASE_URL","GetAllEmployees","search","page","limit","url","response","fetch","method","headers","credentials","ok","error","json","Error","message","status","err","console","_c","GetEmployeeDetailsById","id","data","_c2","DeleteEmployeeById","options","result","log","_c3","CreateEmployee","empObj","formData","FormData","key","append","body","_c4","UpdateEmployeeById","_c5","$RefreshReg$"],"sources":["C:/Users/SURAJ KADRAPURKAR/Desktop/Employee Edge Project/EmployEdge/frontend/src/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:1000\";\r\n\r\nexport const GetAllEmployees = async (search = \"\", page = 1, limit = 5) => {\r\n  try {\r\n    const url = `${BASE_URL}/api/employees?search=${search}&page=${page}&limit=${limit}`;\r\n\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(\r\n        error.message || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"Error fetching employees:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const GetEmployeeDetailsById = async (id) => {\r\n  try {\r\n    const url = `${BASE_URL}/api/employees/${id}`;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(\r\n        error.message || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {\r\n    console.error(\"Error fetching employee details:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const DeleteEmployeeById = async (id) => {\r\n  const url = `${BASE_URL}/api/employees/${id}`;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n  };\r\n  try {\r\n    const result = await fetch(url, options);\r\n    const data = await result.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const CreateEmployee = async (empObj) => {\r\n  const url = `${BASE_URL}/api/employees`;\r\n  console.log(\"url \", url);\r\n  const formData = new FormData();\r\n\r\n  for (const key in empObj) {\r\n    formData.append(key, empObj[key]);\r\n  }\r\n  const options = {\r\n    method: \"POST\",\r\n    body: formData,\r\n    credentials: \"include\",\r\n  };\r\n  try {\r\n    const result = await fetch(url, options);\r\n    const data = await result.json();\r\n    return data;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const UpdateEmployeeById = async (empObj, id) => {\r\n  const url = `${BASE_URL}/api/employees/${id}`;\r\n  console.log(\"url \", url);\r\n  const formData = new FormData();\r\n\r\n  for (const key in empObj) {\r\n    formData.append(key, empObj[key]);\r\n  }\r\n  const options = {\r\n    method: \"PUT\",\r\n    body: formData,\r\n    credentials: \"include\",\r\n  };\r\n  try {\r\n    const result = await fetch(url, options);\r\n    const data = await result.json();\r\n    console.log(\"<---update--> \", data);\r\n    return data;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}